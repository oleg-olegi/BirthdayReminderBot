plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.github.johnrengelman.shadow' version '8.1.1' // Убедитесь, что используете актуальную версию плагина

}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'com.github.pengrad:java-telegram-bot-api:7.4.0'
    implementation 'org.postgresql:postgresql'

    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'

    implementation 'org.apache.commons:commons-lang3:3.12.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

application {
    mainClassName = 'org.example.birthdaybot.BirthdayBotApplication'
}
shadowJar {
    archiveBaseName.set('my-app')
    archiveClassifier.set('')
    archiveVersion.set('')
    mergeServiceFiles()
}
tasks.build {
    dependsOn shadowJar
}

tasks.named('test') {
    useJUnitPlatform()
}
bootJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

